@startuml
namespace JSONExtractor {
    struct JQTransformer {
        -gojq.Code jqProgram
        -Receiver inReceiver
        -Receiver outReceiver
        +error AddReceiver(Receiver)
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
}
namespace Server {
    interface CompletionHandler {
        +error Complete(any, error)
    }
    struct KafkaConsumerCompletionHandler {
        +error Complete(any, error)
    }
    struct AppData {
        -any data
        +CompletionHandler completionHandler
        +any GetData()
        +CompletionHandler GetCompletionHandler()
    }
    interface Receiver {
        +error SendTo(*AppData)
        +(<-chan *AppData, error) GetOutChan()
    }
    struct ChanReceiver {
        -chan *AppData dataChan
        +error SendTo(*AppData)
        +(<-chan *AppData, error) GetOutChan()
    }
    interface Server {
        +error Serve()
    }
    interface Pullable {
        +error AddReceiver(Receiver)
    }
    interface Pushable {
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
    }
    interface SourceServer {
        +error AddReceiver(Receiver)
        +error Serve()
    }
    interface SinkServer {
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
    interface PipeServer {
        +error AddReceiver(Receiver)
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
    interface Producer {
        +error Setup(ProducerConfig)
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
    interface Consumer {
        +error AddReceiver(Receiver)
        +error Setup(ConsumerConfig)
        +error Serve()
    }
    struct KafkaConsumer {
        +error AddReceiver(Receiver)
        +error Setup(KafkaConsumerCofig)
        +error Serve()
    }
    struct KafkaProducer {
        +error Setup(KafkaProducerConfig)
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
    struct ProducerServer {
        -map[string]Producer producerMap
        +(Receiver error) GetReceiver()
        +error HandleIncomingData(*AppData)
        +error Serve()
    }
    struct ConsumerServer {
        -map[string]Consumer consumersMap
        +error AddReceiver(Receiver)
        +error Serve()
    }
    struct KafkaConsumerCofig {
        +error IngestConfig(any)
    }
    struct KafkaProducerConfig {
        +error IngestConfig(any)
    }
    interface ProducerConfig {
        +error IngestConfig(any)
    }
    interface ConsumerConfig {
        +error IngestConfig(any)
    }
}
Server.CompletionHandler *-- Server.AppData
Server.CompletionHandler <|-left- Server.KafkaConsumerCompletionHandler
Server.AppData *-- Server.Receiver
Server.Receiver *-- Server.Pullable
Server.Receiver *-- Server.Pushable
Server.Receiver <|-left- Server.ChanReceiver
Server.Server <|-- Server.SourceServer
Server.Pullable <|-- Server.SourceServer
Server.Server <|-- Server.SinkServer
Server.Pushable <|-- Server.SinkServer
Server.Pushable <|-- Server.PipeServer
Server.Pullable <|-- Server.PipeServer
Server.Server <|-- Server.PipeServer

Server.SinkServer <|-down- Server.Producer
Server.Producer <|-- Server.KafkaProducer
Server.Consumer <|-- Server.KafkaConsumer
Server.Producer *-- Server.ProducerServer
Server.SinkServer <|-left- Server.ProducerServer
Server.SourceServer <|-- Server.ConsumerServer
Server.Consumer *-- Server.ConsumerServer
Server.SourceServer <|-down- Server.Consumer

Server.KafkaConsumerCofig *-up- Server.KafkaConsumer
Server.KafkaProducerConfig *-up- Server.KafkaProducer

Server.PipeServer <|-- JSONExtractor.JQTransformer
Server.Receiver *-- JSONExtractor.JQTransformer

Server.ProducerConfig <|-up- Server.KafkaProducerConfig
Server.ConsumerConfig <|-up- Server.KafkaConsumerCofig

Server.ConsumerConfig *-- Server.Consumer
Server.ProducerConfig *-- Server.Producer
@enduml