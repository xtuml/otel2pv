@startuml
interface Server.Config {
    +error IngestConfig(map[string]any)
}
interface Server.PipeServer {
    +error AddPushable(Server.Pushable)
    +error SendTo(*Server.AppData)
    +error Serve()
    +error Setup(Server.Config)
}
interface Server.Pushable {
    +error SendTo(*Server.AppData)
}

namespace Sequencer {
    enum OutputAppFieldSequenceType {
        Array
        String
    }
    struct SequencerConfig {
        -string outputAppSequenceField
        -string outputAppFieldSequenceIdMap
        -OutputAppFieldSequenceType outputAppFieldSequenceType
        +error IngestConfig(map[string]any)
    }
    struct Sequencer {
        -SequencerConfig config
        -Server.Pushable pushable
        +error AddPushable(Server.Pushable)
        +error SendTo(*Server.AppData)
        +error Serve()
        +error Setup(Server.Config)
    }
    struct IncomingData {
        -string NodeId
        -[]string OrderedChildIds
        -map[string]any AppJSON
    }
    struct StackIncomingData {
        -*IncomingData data
        -int currentChildIndex
        +(string, error) NextChildId()
    }
}

Server.PipeServer <|-- Sequencer.Sequencer
Server.Pushable *-- Sequencer.Sequencer
Server.Config <|-- Sequencer.SequencerConfig
Sequencer.SequencerConfig *-- Sequencer.Sequencer
Sequencer.OutputAppFieldSequenceType *-- Sequencer.SequencerConfig
Sequencer.IncomingData *-- Sequencer.StackIncomingData
@enduml